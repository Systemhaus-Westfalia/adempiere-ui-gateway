# S3 Gateway Rust RESTful
#

location /api/resources/system-info {
	# Policy configuration here (authentication, rate limiting, logging...)

	access_log /var/log/nginx/s3_gateway_rs.log main;

	if ($request_method = OPTIONS) {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Headers' '*';
		add_header 'Access-Control-Max-Age' 3600;
		add_header 'Content-Type' 'text/plain; charset=utf-8';
		add_header 'Content-Length' 0;
		return 204;
	}

	# remove duplicated allow origin
	proxy_hide_header 'access-control-allow-origin';
	add_header 'Access-Control-Allow-Origin' '*';

	add_header 'Access-Control-Max-Age' 3600;
	add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
	add_header 'Access-Control-Expose-Headers' '*';
	add_header 'Access-Control-Allow-Headers' '*';
	add_header 'Access-Control-Allow-Credentials' 'true';

	proxy_http_version 1.1;
	proxy_pass http://s3_gateway_rs/api;
}

location /api/resources {
	proxy_pass http://s3_gateway_rs/api/resources;
	if ($request_method !~ ^(OPTIONS|GET|DELETE)$ ) {
		return 404;
	}
	# limit_except OPTIONS GET DELETE {
	# 	deny all;
	# }
}

location /api/resources/download-url/ {
	proxy_pass http://s3_gateway_rs/api/download-url/;
	limit_except GET {
		deny all;
	}
}

location /api/resources/presigned-url/ {
	proxy_pass http://s3_gateway_rs/api/presigned-url/;
	limit_except GET {
		deny all;
	}
}
